// 使用 d3 獲取主要元素
var main = d3.select("main");

// 使用一個陣列來儲存所有的 scroller 實例
var scrollers = [];

// 使用循環來初始化 scroller
for (var i = 1; i <= 7; i++) {
  scrollers.push(scrollama());
}

// 統一的處理步驟進入函數
function handleStepEnter(response) {
  const { element, direction, index } = response;
  const scrolly = d3.select(element.closest('.scrolly'));
  const figure = scrolly.select('figure');
  const steps = scrolly.selectAll('.step');

  // 為當前步驟添加活躍狀態
  steps.classed("is-active", (d, i) => i === index);

  // 更新圖形根據步驟
  figure.select("p").text(index + 1);
}

// 處理步驟進度的函數
function handleStepProgress(response) {
  const { element, progress } = response;
  const scrolly = d3.select(element.closest('.scrolly'));
  const figure = scrolly.select('figure'); 
}
// 統一的初始化函數
function initScrolly(scrollyId, scroller, parallaxMultiplier = 1) {
  const scrolly = main.select(scrollyId);
  const figure = scrolly.select("figure");
  const article = scrolly.select("article");
  const step = article.selectAll(".step");

  const stepH = Math.floor(window.innerHeight * 0.75);
  step.style("height", stepH + "px");

  const figureHeight = window.innerHeight / 2;
  const figureMarginTop = (window.innerHeight - figureHeight) / 2;

  figure
    .style("height", figureHeight + "px")
    .style("top", figureMarginTop + "px");

  scroller
    .setup({
      step: `${scrollyId} article .step`,
      offset: 0.5,
      progress: true,
      debug: false
    })
    .onStepEnter(handleStepEnter)
    .onStepProgress(response => {
      const { progress } = response;
      const parallaxOffset = progress * 30 * parallaxMultiplier;
      figure.style('transform', `translateY(${parallaxOffset}px)`);
    });
}

// 主初始化函數
function init() {
  try {
    initScrolly("#scrolly-1", scroller1);
    initScrolly("#scrolly-2", scroller2);
    initScrolly("#scrolly-3", scroller3);
    initScrolly("#scrolly-4", scroller4);
    initScrolly("#scrolly-5", scroller5);
    initScrolly("#scrolly-6", scroller6);
    initScrolly("#scrolly-7", scroller7);
  } catch (error) {
    console.error("初始化過程中發生錯誤:", error);
  }
}

// 使用節流優化 resize 事件處理
function throttle(func, limit) {
  let inThrottle;
  return function() {
    const args = arguments;
    const context = this;
    if (!inThrottle) {
      func.apply(context, args);
      inThrottle = true;
      setTimeout(() => inThrottle = false, limit);
    }
  }
}

// 監聽窗口大小變化
window.addEventListener("resize", throttle(function () {
  scroller1.resize();
  scroller2.resize();
  scroller3.resize();
  scroller4.resize();
  scroller5.resize();
  scroller6.resize();
  scroller7.resize();
}, 100));


window.addEventListener('scroll', function() {
  var scrolled = window.pageYOffset;
  var parallax = document.querySelector('.global');
  var speed = 0.5; // 調整這個值來改變視差效果的強度
  parallax.style.transform = 'translateY(' + (scrolled * speed) + 'px)';
});

// 啟動
init();
